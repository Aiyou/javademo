buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'pmd'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'jacoco'

group 'com.cxl'
version '0.0.1-SNAPSHOT'

//  java version
sourceCompatibility = 11
targetCompatibility = 11

ext {
    nexusUsername = System.getenv("NEXUS_USERNAME") == null ? project.property("nexusUsername") : System.getenv("NEXUS_USERNAME")
    nexusPassword = System.getenv("NEXUS_PASSWORD") == null ? project.property("nexusPassword") : System.getenv("NEXUS_PASSWORD")
    nexusUrl = System.getenv("NEXUS_REPO_MAVEN_PUBLIC") == null ? project.property("nexusUrl") : System.getenv("NEXUS_REPO_MAVEN_PUBLIC")
}

repositories {
    mavenLocal()
    maven {
        credentials {
            username nexusUsername
            password nexusPassword
        }
        url nexusUrl
    }
    mavenCentral()
}

// pdm configuration
pmd {
    toolVersion = "6.17.0"
    ruleSets = [
            project.rootDir.getPath() + "/rulesets/java/ali-comment.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-concurrent.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-constant.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-exception.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-flowcontrol.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-naming.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-oop.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-orm.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-other.xml",
            project.rootDir.getPath() + "/rulesets/java/ali-set.xml",
    ]
}


// jacoco
jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                minimum = 0.6
                value = 'COVEREDRATIO'
            }

            excludes = [
                    'com.cxl.demo.config.*',
                    'com.cxl.demo.constant.*',
                    'com.cxl.demo.entity.*',
                    'com.cxl.demo.exception.*',
                    'com.cxl.demo.model.*',
                    'com.cxl.demo.filter.*',
                    'com.cxl.demo.CodesApplication',
                    'com.cxl.demo.interceptor.*',
                    'com.cxl.demo.annotation.*',
                    'com.cxl.demo.controller.HealthController'
            ]
        }
    }
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${gradle.ext.nexusUrl}/content/repositories/releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${gradle.ext.nexusUrl}/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            pom.artifactId = "codes"
            pom.version = "${version}"
            pom.groupId = "com.cxl.demo"
        }
    }
}

dependencies {

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.3.4'


    implementation 'org.springframework.boot:spring-boot-starter-web'

    //lombok 插件
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    //mysql mybatis
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
    // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.2'

    //validator
    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.2.Final'

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.68'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // mandatory dependencies for using Spock
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.7'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    // optional dependencies for using Spock
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5' // needed to test spring framework app
    testImplementation 'com.nagternal:spock-genesis:0.6.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    pmd "com.alibaba.p3c:p3c-pmd:2.0.1"

    //redis
    implementation group: 'redis.clients', name: 'jedis', version: '3.1.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-redis', version: '1.4.7.RELEASE'
    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '2.2.7.RELEASE'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-gson:0.11.1'

}
